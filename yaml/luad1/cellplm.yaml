run_id: 
dataset:
    module: data.data_loader
    class: H5ADLoader
    path: mnt/DATA/luad_brca/luad/luad_analysis1.h5ad #path is relative to DATA_PATH in setup_path.py
    load_raw: True
    label_key: group_id
    batch_key: sample_id
    layer_name: X  #if data exist in another layer (e.g. adta.layers['counts']). The data will be copied to adata.X
    train_test_split: data_splits/luad/luad1/train_test_split.json #path is relative to BASE_PATH in setup_path.py
    cv_splits: data_splits/luad/luad1/cv_splits.json #path is relative to BASE_PATH in setup_path.py

qc:
    # skip: True
    min_genes: 10
    min_cells: 10

preprocessing:
    skip: True
    normalize: True
    target_sum: 10000
    apply_log1p: True

hvg:
    skip: True
    batch_key: batch
    n_top_genes: 4096
    flavor: seurat # expect logarithmized data
    
embedding:
    load_cached: True
    method: cellplm
    module: features.cellplm_extractor
    class: CellPLMExtractor
    viz: True
    eval: True
    params: 
        pretrain_directory: /home/jupyter/mnt/MODELS/CellPLM
        pretrain_prefix: 20230926_85M

classification:
    module: models.classify
    class: ClassifierPipeline
    params:
        model: randomforest
        n_estimators: 100
        max_depth: 5
        cv: True
        train_funcs: 
            - avg
            - mil
            - vote
        label_map:
              early_stage: 0
              late_stage: 1
    viz: True
    eval: True
