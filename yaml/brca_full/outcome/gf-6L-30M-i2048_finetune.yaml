run_id: 
dataset:
    module: data.gf_loader
    class: GFLoader
    # path: DATA/brca_full/brca_full_3000cell_4096gene.h5ad #path is relative to DATA_PATH in setup_path.py
    path: DATA/brca_full/T_cells_only.h5ad
    load_raw: False
    label_key: outcome
    batch_key: Cancer_type
    filter: 
      - column: outcome
        values:
          - NE
          - E
      - column: timepoint
        values:
          - Pre
    layer_name: X  #if data exist in another layer (e.g. adta.layers['counts']). The data will be copied to adata.X
    train_test_split: data_splits/brca_full/brca_outcome/train_test_split_oversampled.json #path is relative to BASE_PATH in setup_path.py
    cv_splits: data_splits/brca_full/brca_outcome/cv_splits_oversampled.json #path is relative to BASE_PATH in setup_path.py
qc:
    min_genes: 10
    min_cells: 10

preprocessing:
    normalize: True
    target_sum: 10000
    apply_log1p: True

hvg:
    batch_key: batch
    n_top_genes: 2048
    flavor: seurat # expect logarithmized data
    
    
embedding:
    skip: True # dont excute this (embedding) step
    viz: False
    eval: False

classification:
    module: models.gf_finetune
    class: GFFineTuneModel
    params:
        model: Geneformer-V1-10M
        model_dir: /home/jupyter/MODELS/Geneformer/
        dict_dir: /home/jupyter/MODELS/Geneformer/geneformer/gene_dictionaries_30m #genefromer 1
        model_input_size: 2048
        batch_size: 8
        label_map:
              NE: 0
              E: 1
    viz: True
    eval: True
