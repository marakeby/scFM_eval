run_id: 
dataset:
    module: data.data_loader
    class: H5ADLoader
    path: DATA/brca_full/T_cells_only.h5ad #path is relative to DATA_PATH in setup_path.py
    load_raw: False
    label_key: outcome
    batch_key: Cancer_type
    filter: 
      - column: outcome
        values:
          - NE
          - E
      - column: timepoint
        values:
          - Pre
    layer_name: X  #if data exist in another layer (e.g. adta.layers['counts']). The data will be copied to adata.X
    train_test_split: data_splits/brca_full/brca_outcome/train_test_split_oversampled.json #path is relative to BASE_PATH in setup_path.py
    cv_splits: data_splits/brca_full/brca_outcome/cv_splits_oversampled.json #path is relative to BASE_PATH in setup_path.py

qc:
    # skip: True
    min_genes: 10
    min_cells: 10

preprocessing:
    # skip: True
    normalize: True
    target_sum: 10000
    apply_log1p: True

embedding:
    method: PCA
    module: features.pca_extractor
    class: PCAEmbeddingExtractor
    viz: True
    eval: True
    params: 
        n_components: 100
        embedding_col: X_pca

classification:
    module: models.classify
    class: ClassifierPipeline
    params:
        model: randomforest
        n_estimators: 100
        max_depth: 5
        cv: True
        label_map:
              NE: 0
              E: 1
    viz: True
    eval: True
